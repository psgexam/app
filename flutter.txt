-------------------------------------------------------------------------------------------------------------------
ToDo using Flutter
-------------------------------------------------------------------------------------------------------------------

STEPS:
Open android studio
Create a new flutter project
Paste the code


---------
main.dart
---------
import 'package:flutter/material.dart';
void main() {
  runApp(MyApp());
}
class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Todo App',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: TodoScreen(),
    );
  }
}
class TodoScreen extends StatefulWidget {
  @override
  _TodoScreenState createState() => _TodoScreenState();
}
class _TodoScreenState extends State<TodoScreen> {
  List<String> tasks = [];
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Todo App'),
      ),
      body: Column(
        children: [
          Expanded(
            child: ListView.builder(
              itemCount: tasks.length,
              itemBuilder: (context, index) {
                return ListTile(
                  title: Text(tasks[index]),
                  trailing: IconButton(
                    icon: Icon(Icons.delete),
                    onPressed: () {
                      setState(() {
                        tasks.removeAt(index);
                      });
                    },
                  ),
                );
              },
            ),
          ),
          Padding(
            padding: const EdgeInsets.all(8.0),
            child: ElevatedButton(
              onPressed: _addTask,
              child: Text('Add Task'),
            ),
          ),
        ],
      ),
    );
  }
  void _addTask() {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        TextEditingController _taskController = TextEditingController();
        return AlertDialog(
          title: Text('Add Task'),
          content: TextField(
            controller: _taskController,
            decoration: InputDecoration(hintText: 'Enter your task'),
          ),
          actions: [
            ElevatedButton(
              onPressed: () {
                setState(() {
                  tasks.add(_taskController.text);
                });
                Navigator.pop(context);
              },
              child: Text('Add'),
            ),
            TextButton(
              onPressed: () {
                Navigator.pop(context);
              },
              child: Text('Cancel'),
            ),
          ],
        );
      },
    );
  }
}



Execution:
flutter run (or) press run button
-------------------------------------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------------------------------------
Expense using Flutter
-------------------------------------------------------------------------------------------------------------------

STEPS:
Open android studio
Create a new flutter project
Paste the code


---------
main.dart
---------
import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class Transaction {
  final String id;
  final String title;
  final double amount;
  final DateTime date;
  final String category;

  Transaction({
    required this.id,
    required this.title,
    required this.amount,
    required this.date,
    required this.category,
  });
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Expense Manager',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: ExpenseManager(),
    );
  }
}

class ExpenseManager extends StatefulWidget {
  @override
  _ExpenseManagerState createState() => _ExpenseManagerState();
}

class _ExpenseManagerState extends State<ExpenseManager> {
  List<Transaction> transactions = [];

  TextEditingController titleController = TextEditingController();
  TextEditingController amountController = TextEditingController();
  TextEditingController categoryController = TextEditingController();

  void addTransaction() {
    String title = titleController.text;
    double amount = double.tryParse(amountController.text) ?? 0.0;
    String category = categoryController.text;

    if (title.isNotEmpty && amount > 0) {
      setState(() {
        transactions.add(Transaction(
          id: DateTime.now().toString(),
          title: title,
          amount: amount,
          date: DateTime.now(),
          category: category,
        ));
        titleController.clear();
        amountController.clear();
        categoryController.clear();
      });
    }
  }

  Map<String, double> calculateWeeklySummary() {
    Map<String, double> summary = {};

    transactions.forEach((transaction) {
      if (transaction.date.isAfter(DateTime.now().subtract(Duration(days: 7)))) {
        if (summary.containsKey(transaction.category)) {
          summary[transaction.category]! += transaction.amount;
        } else {
          summary[transaction.category] = transaction.amount;
        }
      }
    });

    return summary;
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Expense Manager'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            TextField(
              controller: titleController,
              decoration: InputDecoration(labelText: 'Title'),
            ),
            TextField(
              controller: amountController,
              decoration: InputDecoration(labelText: 'Amount'),
              keyboardType: TextInputType.number,
            ),
            TextField(
              controller: categoryController,
              decoration: InputDecoration(labelText: 'Category'),
            ),
            SizedBox(height: 10),
            ElevatedButton(
              onPressed: addTransaction,
              child: Text('Add Transaction'),
            ),
            SizedBox(height: 20),
            Text(
              'Weekly Summary',
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
            ),
            SizedBox(height: 10),
            Expanded(
              child: ListView(
                children: calculateWeeklySummary().entries.map((entry) {
                  return ListTile(
                    title: Text('${entry.key}: \$${entry.value.toStringAsFixed(2)}'),
                  );
                }).toList(),
              ),
            ),
          ],
        ),
      ),
    );
  }
}


Execution:
flutter run (or) press run button
-------------------------------------------------------------------------------------------------------------------
